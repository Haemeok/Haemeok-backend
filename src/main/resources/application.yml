spring:
  data:
    redis:
      host: master.haemeok-redis-cluster.nimena.apn2.cache.amazonaws.com
      port: 6379
      password: ${REDIS_PASSWORD}
      ssl:
          enabled: true

  profiles:
    active: local
  mvc:
    async:
      request-timeout: 600000   # 10분 (밀리초)

server:
  forward-headers-strategy: framework

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    url: /v3/api-docs
    path: /swagger-ui

opensearch:
  host: ${OPENSEARCH_HOST}

search:
  engine: auto  # auto | opensearch | querydsl

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus
  security:
    enabled: false

  metrics:
    enable:
      all: true

    distribution:
      # 1) 특정 percentiles 를 계산해서 노출
      percentiles:
        http.server.requests: 0.5,0.95,0.99

      # 2) histogram bucket (le 라벨이 붙은) 을 수집
      percentiles-histogram:
        http.server.requests: true


ai:
  quota:
    per-day: 1
    timezone: "Asia/Seoul"

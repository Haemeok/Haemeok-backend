plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.jdc'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		// AWS SDK v2 BOM: 여기 버전을 전부 맞추고 싶으신 최신 버전(예: 2.31.29) 으로 지정
		mavenBom "software.amazon.awssdk:bom:2.31.29"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-messaging'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'mysql:mysql-connector-java:8.0.33'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	runtimeOnly 'com.h2database:h2'

	//ouath2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//jjwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 파싱용

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	// queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// OpenSearch 클라이언트
	implementation 'org.opensearch.client:opensearch-rest-high-level-client:2.17.0'
	implementation 'org.opensearch:opensearch:2.17.0'

	// (선택) IAM SigV4 서명 지원을 위해 추가할 의존성
	implementation 'io.github.acm19:aws-request-signing-apache-interceptor:3.0.0'  // SigV4 인터셉터 :contentReference[oaicite:0]{index=0}

	// --- AWS SDK 모듈들 (버전 생략 → BOM 에서 자동 적용) ---
	implementation 'software.amazon.awssdk:s3'
	implementation 'software.amazon.awssdk:auth'
	implementation 'software.amazon.awssdk:regions'
	implementation 'software.amazon.awssdk:http-auth-aws'

	//서버 인메모리 캐시(Caffeine)
	implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	implementation 'com.openai:openai-java:2.8.1'

	implementation(platform("io.github.resilience4j:resilience4j-bom:2.0.2"))
	implementation("io.github.resilience4j:resilience4j-spring-boot3")
	implementation("io.github.resilience4j:resilience4j-circuitbreaker")
	implementation("io.github.resilience4j:resilience4j-retry")
	implementation("io.github.resilience4j:resilience4j-timelimiter")
	implementation "org.springframework.boot:spring-boot-starter-aop"
	implementation "org.springframework.retry:spring-retry"

	testImplementation 'org.springframework.security:spring-security-test'
}

def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

sourceSets {
	main {
		java {
			srcDirs += querydslDir
		}
	}
}

tasks.named("compileJava") {
	options.annotationProcessorGeneratedSourcesDirectory = querydslDir
}

tasks.named('test') {
	useJUnitPlatform()
}
